activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <TextView
        android:id="@+id/tvDate"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Date" />
 
    <Button
        android:id="@+id/btPickDate"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/tvDate"
        android:layout_centerInParent="true"
        android:text="Pick Date" />
</RelativeLayout>

DatePicker.java
 
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.DialogFragment;
import java.util.Calendar;
 
public class DatePicker extends DialogFragment {
    @NonNull
    @Override
    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
        Calendar mCalendar = Calendar.getInstance();
        int year = mCalendar.get(Calendar.YEAR);
        int month = mCalendar.get(Calendar.MONTH);
        int dayOfMonth = mCalendar.get(Calendar.DAY_OF_MONTH);
        return new DatePickerDialog(getActivity(), (DatePickerDialog.OnDateSetListener)
                getActivity(), year, month, dayOfMonth);
    }
}

MainActivity.java
import android.app.DatePickerDialog;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import java.text.DateFormat;
import java.util.Calendar;
 
public class MainActivity extends AppCompatActivity implements DatePickerDialog.OnDateSetListener {
    TextView tvDate;
    Button btPickDate;
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tvDate = findViewById(R.id.tvDate);
        btPickDate = findViewById(R.id.btPickDate);
        btPickDate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Please note that use your package name here
                tutorials.droid.datepicker.DatePicker mDatePickerDialogFragment;
                mDatePickerDialogFragment = new tutorials.droid.datepicker.DatePicker();
                mDatePickerDialogFragment.show(getSupportFragmentManager(), "DATE PICK");
            }
        });
    }
 
    @Override
    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
        Calendar mCalendar = Calendar.getInstance();
        mCalendar.set(Calendar.YEAR, year);
        mCalendar.set(Calendar.MONTH, month);
        mCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
        String selectedDate = DateFormat.getDateInstance(DateFormat.FULL).format(mCalendar.getTime());
        tvDate.setText(selectedDate);
    }
}


Q1 B)
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Digital Bio Data</title>
<link rel="stylesheet" href="style.css">
</head>
<body>
<h1>Digital Bio Data</h1>
<div id="data">
<ul>
<li>Name: John Doe</li>
<li>Age: 30</li>
<li>Gender: Male</li>
<li>Address: 123 Main Street, Anytown, USA</li>
<li>Phone: (123) 456-7890</li>
<li>Email: johndoe@example.com</li>
</ul>
</div>
<script src="script.js"></script>
</body>
</html>

style.css
body {
  font-family: sans-serif;
}

h1 {
  font-size: 2em;
  margin-bottom: 1em;
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

li {
  margin-bottom: .5em;
}

var data = [
  {
    "name": "John Doe",
    "age": 30,
    "gender": "Male",
    "address": "123 Main Street, Anytown, USA",
    "phone": "(123) 456-7890",
    "email": "johndoe@example.com"
  }
];

function loadData() {
  var ul = document.getElementById("data");
  for (var i = 0; i < data.length; i++) {
    var li = document.createElement("li");
    li.innerHTML = data[i].name + " " + data[i].age + " " + data[i].gender + " " + data[i].address + " " + data[i].phone + " " + data[i].email;
    ul.appendChild(li);
  }
}

window.onload = loadData;





Q2 A)
#include <time.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>

int main()
{
	char filename[] = "c:\\test.txt";
	char timeStr[ 100 ] = "";
	struct stat buf;
	time_t ltime;
	char datebuf [9];
	char timebuf [9];

	if (!stat(filename, &buf))
	{
	strftime(timeStr, 100, "%d-%m-%Y %H:%M:%S", localtime( &buf.st_mtime));
	printf("\nLast modified date and time = %s\n", timeStr);
	}
	else
	{
	printf("error getting atime\n");
	}
	_strtime(timebuf);
	_strdate(datebuf);
	printf("\nThe Current time is %s\n",timebuf);
	printf("\nThe Current Date is %s\n",datebuf);
	time(&ltime );
	printf("\nThe Current time is %s\n",ctime( &ltime ));
	printf("\Diff between current and last modified time ( in seconds ) %f\n", difftime(ltime ,buf.st_mtime ) );
	return 0;
}



Q2 B)

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include<errno.h>
#include<sys/wait.h>
#include <unistd.h>
int main(){
// array of 2 size a[0] is for
// reading and a[1] is for
// writing over a pipe
int a[2];
// using pipe for inter process communication
pipe(a);
if(!fork())
{
// closing normal stdout
close(1);
// making stdout same as a[1]
dup(a[1]);
// closing reading part of pipe
// we don't need of it at this time
close(a[0]);
// executing ls
execlp("ls","ls",NULL);
}
else
{
// closing normal stdin
close(0);
// making stdin same as a[0]
dup(a[0]);
// closing writing part in parent,
// we don't need of it at this time
close(a[1]);
// executing wc
execlp("wc","wc",NULL);
}
}
