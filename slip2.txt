Q1A Create an Android Application that will change color of the screen and change the font
size of text view using x

Activity.java :
package com.example.slip2_1;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.util.TypedValue;
import android.widget.*;
public class MainActivity extends AppCompatActivity {
private RelativeLayout mainLayout;
private TextView textView;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
mainLayout = findViewById(R.id.main_layout);
textView = findViewById(R.id.textview);
// Set background color of main layout
mainLayout.setBackgroundColor(getResources().getColor(R.color.colorPrimary
));
// Set text size of text view
textView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 24);
}
}

Activity.xml :
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools">
<application
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules"
android:fullBackupContent="@xml/backup_rules"
android:icon="@mipmap/ic_launcher"
android:label="@string/app_name"
android:supportsRtl="true"
android:theme="@style/Theme.Slip2_1"
tools:targetApi="31">
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER"
/>
</intent-filter>
</activity>
</application>
</manifest>


Q1B

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var pickerView: UIPickerView!

    override func viewDidLoad() {
        super.viewDidLoad()

        // Initialize the picker view data
        let fruits = ["Apple", "Banana", "Orange", "Pineapple", "Watermelon"]
        pickerView.dataSource = self
        pickerView.delegate = self

        // Select the first fruit by default
        pickerView.selectRow(0, inComponent: 0, animated: false)
    }
}

extension ViewController: UIPickerViewDataSource {

    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 2
    }

    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        switch component {
        case 0:
            return 10
        case 1:
            return fruits.count
        default:
            return 0
        }
    }
}

extension ViewController: UIPickerViewDelegate {

    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        switch component {
        case 0:
            return String(row)
        case 1:
            return fruits[row]
        default:
            return nil
        }
    }

    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        // Do something with the selected fruit
        let fruit = fruits[row]
        let quantity = pickerView.selectedRow(inComponent: 0)
        print("You selected \(fruit) and \(quantity) quantity")
    }
}


Q2A)
#include<stdio.h>
#include<dirent.h>
#include<string.h>

int main(int argc, char* argv[])
{
	DIR *d;
	char *position;
	struct dirent *dir;
	int i=0;
	
	if(argc!=2){
	printf("Provide suffiecient args");
	}
	else {
	d = opendir(".");
	if (d)
	{
	while ((dir = readdir(d)) != NULL)
	{
	position=strstr(dir->d_name,argv[1]);
	i=position-dir->d_name;
	if(i==0)
	printf("%s\n",dir->d_name);
	
	}
	closedir(d);
	}
	return(0);
	}
	}

Q2B)
Not found